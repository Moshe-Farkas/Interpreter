func main {
    funco()
    println "done"
}

func funco {
    mat = [
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#","#","#","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",".",".",".",".","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#","#","#","#",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",],
        [".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",".",]
    ]

    height = 25 
    width = 40  
    run(mat, width, height)
}

func run mat, width, height {
    while true {
        update(mat, width, height)
        printMat(mat, width, height)
    }
}

func initial_mat width, height {
    mat = []
    i = 0
    while i < height {
        j = 0
        row = []
        while j < width {
            append row "." 
            j = j + 1
        }
        append mat row
        i = i + 1
    }
    return mat
}

func update mat, width, height {
    copy = initial_mat(width, height)
    copyMat(mat, copy, width, height)
    i = 1 

    while i < height - 1 {
        j = 1
        while j < width - 1 {
            
            count = aliveCount(mat, i, j)

            if mat[i][j] == "#" {
                if count < 2 {
                    copy[i][j] = "."
                }
                if count > 3 {
                    copy[i][j] = "."
                }

            } else {
                if count == 3 {
                    copy[i][j] = "#"
                }
            }

            j = j + 1
        }
        i = i + 1
    }


    copyMat(copy, mat, width, height)
}

func aliveCount mat, y, x {
    count = 0
    if mat[y - 1][x - 1] == "#" {
        count = count + 1
    }

    if mat[y - 1][x] == "#" {
        count = count + 1
    }

    if mat[y - 1][x + 1] == "#" {
        count = count + 1
    }

    if mat[y][x - 1] == "#" {
        count = count + 1
    }

    if mat[y][x + 1] == "#" {
        count = count + 1
    }

    if mat[y + 1][x - 1] == "#" {
        count = count + 1
    }

    if mat[y + 1][x] == "#" {
        count = count + 1
    }

    if mat[y + 1][x + 1] == "#" {
        count = count + 1
    }
    return count
}

func copyMat mat, copy, width, height {
    i = 0
    while i < height {
        j = 0
        row = []
        while j < width {
            copy[i][j] = mat[i][j]
            j = j + 1
        }
        i = i + 1
    }
}

func printMat mat, width, height {
    clrscrn
    y = 0
    while y < height {
        x = 0
        while x < width {
            print mat[y][x] + " "
            x = x + 1
        }
        y = y + 1
        println ""  
    }
    println ""
}


